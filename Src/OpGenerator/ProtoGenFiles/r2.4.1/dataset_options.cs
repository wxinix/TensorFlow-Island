// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: dataset_options.proto
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace tensorflow.data
{

    [global::ProtoBuf.ProtoContract()]
    public partial class DistributeOptions : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"auto_shard_policy")]
        public AutoShardPolicy AutoShardPolicy { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"num_devices")]
        public int NumDevices { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class MapVectorization : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"enabled")]
        public bool Enabled { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"use_choose_fastest")]
        public bool UseChooseFastest { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class OptimizationOptions : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"apply_default_optimizations")]
        public bool ApplyDefaultOptimizations { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"autotune")]
        public bool Autotune { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"autotune_buffers")]
        public bool AutotuneBuffers { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"autotune_cpu_budget")]
        public int AutotuneCpuBudget { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"autotune_ram_budget")]
        public int AutotuneRamBudget { get; set; }

        [global::ProtoBuf.ProtoMember(6, Name = @"filter_fusion")]
        public bool FilterFusion { get; set; }

        [global::ProtoBuf.ProtoMember(7, Name = @"filter_with_random_uniform_fusion")]
        public bool FilterWithRandomUniformFusion { get; set; }

        [global::ProtoBuf.ProtoMember(8, Name = @"hoist_random_uniform")]
        public bool HoistRandomUniform { get; set; }

        [global::ProtoBuf.ProtoMember(9, Name = @"map_and_batch_fusion")]
        public bool MapAndBatchFusion { get; set; }

        [global::ProtoBuf.ProtoMember(10, Name = @"map_and_filter_fusion")]
        public bool MapAndFilterFusion { get; set; }

        [global::ProtoBuf.ProtoMember(11, Name = @"map_fusion")]
        public bool MapFusion { get; set; }

        [global::ProtoBuf.ProtoMember(12, Name = @"map_parallelization")]
        public bool MapParallelization { get; set; }

        [global::ProtoBuf.ProtoMember(13, Name = @"map_vectorization")]
        public MapVectorization MapVectorization { get; set; }

        [global::ProtoBuf.ProtoMember(14, Name = @"noop_elimination")]
        public bool NoopElimination { get; set; }

        [global::ProtoBuf.ProtoMember(15, Name = @"parallel_batch")]
        public bool ParallelBatch { get; set; }

        [global::ProtoBuf.ProtoMember(16, Name = @"reorder_data_discarding_ops")]
        public bool ReorderDataDiscardingOps { get; set; }

        [global::ProtoBuf.ProtoMember(17, Name = @"shuffle_and_repeat_fusion")]
        public bool ShuffleAndRepeatFusion { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class ThreadingOptions : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"max_intra_op_parallelism")]
        public int MaxIntraOpParallelism { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"private_threadpool_size")]
        public int PrivateThreadpoolSize { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class Options : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"deterministic")]
        public bool Deterministic { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"distribute_options")]
        public DistributeOptions DistributeOptions { get; set; }

        [global::ProtoBuf.ProtoMember(3, Name = @"optimization_options")]
        public OptimizationOptions OptimizationOptions { get; set; }

        [global::ProtoBuf.ProtoMember(4, Name = @"slack")]
        public bool Slack { get; set; }

        [global::ProtoBuf.ProtoMember(5, Name = @"threading_options")]
        public ThreadingOptions ThreadingOptions { get; set; }

        [global::ProtoBuf.ProtoMember(6, Name = @"external_state_policy")]
        public ExternalStatePolicy ExternalStatePolicy { get; set; }

    }

    [global::ProtoBuf.ProtoContract()]
    public enum AutoShardPolicy
    {
        [global::ProtoBuf.ProtoEnum(Name = @"AUTO")]
        Auto = 0,
        [global::ProtoBuf.ProtoEnum(Name = @"FILE")]
        File = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"DATA")]
        Data = 2,
        [global::ProtoBuf.ProtoEnum(Name = @"HINT")]
        Hint = 3,
        [global::ProtoBuf.ProtoEnum(Name = @"OFF")]
        Off = -1,
    }

    [global::ProtoBuf.ProtoContract()]
    public enum ExternalStatePolicy
    {
        [global::ProtoBuf.ProtoEnum(Name = @"POLICY_WARN")]
        PolicyWarn = 0,
        [global::ProtoBuf.ProtoEnum(Name = @"POLICY_IGNORE")]
        PolicyIgnore = 1,
        [global::ProtoBuf.ProtoEnum(Name = @"POLICY_FAIL")]
        PolicyFail = 2,
    }

}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion
